<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>GUI Triggers &amp; SKOOTs</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>SKOOT 9</name>
				<script>--[[
notes provided by thric3blinded#0967
var i= Math.min(Math.max(str*1, 0), 30); //0-30
        i = Math.round((i / 30) * 100) / 100;    //No more than two decimal points
        document.getElementById('light_indicator').style.opacity = i;
]]--

deleteLine() --remove line from main console. line variable remains unchanged.
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SKOOT 9</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>TEC Map Rooms</name>
				<script>--SKOOT 6, provides room sizes and positions for map

--We are about to draw a new map, so hide all the rooms.
--We are not going to bother with setting room sizes and moving moves to off screen
--that are not being used unless we find a need for it.
--Likely hiding rooms will be error free and is obviously nearly
--processor free.
for i = 1, 150 do --We know the room count because we set it in script 2dMap.
 	mapExit[i]:hide() --Hide exits
	mapRoom[i]:hide() --Hide rooms
end --end of hide rooms loop

mapRoomsLC = 1 --Just a loop counter so we can go through rooms easily.

--collect data from global line variable and draw the map.
parthiaDrawMapRooms()

--We want the map zoom level, but not 100 times.
if getTECMapDebugMode() then debugToDisplay("Map Zoom "..tostring(mapZoom)) end

deleteLine() --remove line from main console. line variable remains unchanged.

--SKOOT 10 is our last room data message. Use data collected from TEC to manage parthiaMap
if parthiaMap.getEnabled() then --if player is using parthiaMap
  parthiaMap.moveNeeded = true --Movement needs to be delayed because sometimes there is not SKOOT 10 message. This is used to track if movement has already begun. Used in function parthiaMap.delayMove()
  tempTimer(.25, "parthiaMap.delayMove()")
end --if parthiaMap.getEnabled()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SKOOT 6</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Map Room error catch</name>
				<script>--[[
TEC does not have GA or Go Ahead telnet support.
Due to this very long lines may parse if there is lag.
This catches an unwanted parse during a SKOOT 6 or map room draw message
]]--

if not string.starts(line, "SKOOT") then --do not run if this is a SKOOT message
  
  debugToDisplay("trigger, Map Room error catch.")
  parthiaDrawMapRooms()--draw the rooms, use data from global line variable
  deleteLine() --remove line from main console. line variable remains unchanged.

  --tell person mapping they need to recapture the room
  if parthiaMap.mapping then --if new maps are currently being created
    pecho("&lt;red&gt;Lag error server side. Please move back erase this room and attempt again.\n&lt;reset&gt;")
  end --if parthiaMap.mapping
end
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return line:match("(-?%d+),(-?%d+),(%d+),(#%x+),%d+[.%d*]?,?" )</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>TEC map exits</name>
				<script>--SKOOT 10 is Exit position on the map

mapExitsLC = 1 --Just a loop counter so we can go through rooms easily.

parthiaDrawMapExits()

tecMap_back:lower() --lower the background behind the exits.
mapRoom[150]:hide() --mapRoom[150] is used to show exits off message on resize
mapRoom[150]:lower()

--We want the map zoon level, but not 100 times...
if getTECMapDebugMode() then debugToDisplay("Map Zoom "..tostring(mapZoom)) end

deleteLine() --remove line from main console. line variable remains unchanged.

--SKOOT 10 is our last room data message. Use data collected from TEC to manage parthiaMap
if parthiaMap.getEnabled() then --if player is using parthiaMap
  parthiaMap.Move()
end --if parthiaMap.getEnabled()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SKOOT 10</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Map Exits error catch</name>
				<script>--[[
TEC does not have GA or Go Ahead telnet support.
Due to this very long lines may parse if there is lag.
This catches an unwanted parse during a SKOOT 6 or map room draw message
]]--

if not string.starts(line, "SKOOT") and 
  (line:match("hor") or line:match("ver") ) then --do not run if this is a SKOOT message
  
  debugToDisplay("trigger, Map Exits error catch.")
  parthiaDrawMapExits()--draw the exits, using data from global line variable
  tecMap_back:lower() --lower the background behind the exits.
  deleteLine() --remove line from main console. line variable remains unchanged.
  
  --tell person mapping they need to recapture the room
  if parthiaMap.mapping then --if new maps are currently being created
    pecho("&lt;red&gt;Lag error server side. Please move back erase this room and attempt again.\n&lt;reset&gt;")
  end --if parthiaMap.mapping
end --if not string.starts(line, "SKOOT")
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return line:match("(-?%d+),(-?%d+),(%w+),(%d+),?" )</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Compass</name>
				<script>--[[
Use data from SKOOT 7 message to change images on the compass.
References:
https://wiki.mudlet.org/w/Manual:String_Functions#string.gmatch.2C_utf8.gmatch
https://www.lua.org/pil/20.2.html
]]--

--get all directions and if they should be showed from the skoot 7 message
for direction, show in string.gmatch( line, ",?(%a+),(%a+)" ) do
  
  displayDebug("trigger Compass, setting dirrection "..direction.." to "..show)
  
  --if the direction is u or d convert it into up or down.
  if direction == "u" then direction = "up"
  elseif direction == "d" then direction = "down" end
  
  if show == "show" then --if the direction should be shown.
    MultiWindow.Compass.lit(direction) --show the direction as active in the MultiWindow compass
    tecCompass.lit(direction) --show the direction as active in the standard tec compass
  else --if the compass direction should be inactive
    MultiWindow.Compass.unlit(direction) --show the direction as inactive in the MultiWindow compass
    tecCompass.unlit(direction) --show the direction as inactive in the standard tec compass
  end --if show == "show"
end --for string.gmatch( line, "(%a%a?),(?%d+)" )

deleteLine() --remove line from main console. line variable remains unchanged.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SKOOT 7</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Status Bar</name>
				<script>--SKOOT 8 handles status bars.

--Examples are:
--SKOOT 8 Health,100
--SKOOT 8 Fatigue,100
--SKOOT 8 Encumbrance,87
--SKOOT 8 Satiation,50</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Health bar</name>
					<script>--Pushes SKOOT 8 Health,#
--into the health bar.

--This can be done with a regex trigger () and matches[2].
--We are doing it this way to avoid a regex when it is not needed.
--We want as few regex triggers as is possible. All these triggers 
--are checked on every line the server sends.

	--pull only the numbers at the end into a local variable
	local health = string.gsub(line,"SKOOT 8 Health,","")
	--this probably be converted to string.sub
	--http://lua-users.org/wiki/StringLibraryTutorial
	--https://wiki.mudlet.org/w/Manual:String_Functions#string.sub.2C_utf8.sub
	--local health =  string.sub(line, 16, string.len(line))
	
	hpbar:setValue(tonumber(health),100) --set bar on screen
  MultiWindow.hpbar:setValue(tonumber(health),100) --set bar in the MultiWindow
	--echo("\nYour current health is: ")
	--echo(health)

deleteLine() --remove line from main console. line variable remains unchanged.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>SKOOT 8 Health,</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fatigue bar</name>
					<script>--Pushes SKOOT 8 Fatigue,#
--into the fatigue bar.

	--pull only the numbers at the end into a local variable
	local fatigue = string.gsub(line,"SKOOT 8 Fatigue,","")

	fatiguebar:setValue(tonumber(fatigue),100) --set bar on screen
  MultiWindow.fatiguebar:setValue(tonumber(fatigue),100) --set bar in the MultiWindow
	--echo("\nYour current fatigue is: ")
	--echo(fatigue)
	
deleteLine() --remove line from main console. line variable remains unchanged.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>SKOOT 8 Fatigue,</string>
						<string>SKOOT 8 Fatigue,100</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Encumbrance Bar</name>
					<script>--Pushes SKOOT 8 Fatigue,#
--into the fatigue bar.

	--pull only the numbers at the end into a local variable
	local encumbrance = string.gsub(line,"SKOOT 8 Encumbrance,","")

	encumbrancebar:setValue(tonumber(encumbrance),100) --set bar on screen
  MultiWindow.encumbrancebar:setValue(tonumber(encumbrance),100) --set bar in MultiWindow
	--echo("\nYour current encumbrance rate is: ")
	--echo(encumbrance)
	
deleteLine() --remove line from main console. line variable remains unchanged.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>SKOOT 8 Encumbrance,</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hunger bar</name>
					<script>--Pushes SKOOT 8 Fatigue,#
--into the fatigue bar.

	--pull only the numbers at the end into a local variable
	local hunger = string.gsub(line,"SKOOT 8 Satiation,","")

	hungerbar:setValue(tonumber(hunger),100) --set bar on screen
  MultiWindow.hungerbar:setValue(tonumber(hunger),100) --set bar in MultiWindow
	--echo("\nYour current hunger rate is: ")
	--echo(hunger)
	
deleteLine() --remove line from main console. line variable remains unchanged.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>SKOOT 8 Satiation,</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>URL Opener SKOOT 5</name>
				<script>--Had thought SKOOT 5 was for the vote isPrompt
--It is for all URL calls.
--example: SKOOT 5 http://tec.skotos.net:1180/bin/help?$help_commands_command

-- The Eternal-City needs your support! Please vote! www.topmudsites.com/vote-scarlatc.html
--opens the voting window at login
local tecVoteTopMudSites = [[topmudsites]]
if tecVoteTopMudSites == string.match(line, tecVoteTopMudSites) then
	deleteLine() --remove line text from main console. line variable remains unchanged.
	
	echo("To help the world know this game exists you could:\n")

	cechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Vote for TEC on topmudsites.com", 
	[[openUrl("http://www.topmudsites.com/vote-scarlatc.html")]], 
	"Vote for TEC!", true)
	echo("\n")
	
	cechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Like us on facebook", 
	[[openUrl("https://www.facebook.com/SkotosTheEternalCity/")]], 
	"Vote for TEC!", true)
	echo("\n")
else --if it is not a vote prompt
	deleteLine() --remove line from main console. line variable remains unchanged.
end --if vote skoot appears else just delete</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SKOOT 5</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>data collection</name>
			<script>--[[
For automated checks the client runs.
]]--</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Room Character Check</name>
				<script>--[[
We have to use a lua function because we do not know how many lines we need to read.
If you know how many lines your function needs, set fire length (top right) instead of a lua function.

Room check when:
user runs "room check" presses ctrl+r or runs "ac ."

Reference for this trigger 
https://www.lua.org/pil/20.2.html has explanation on lua string patterns

First user request was to make the command list on right click custamizale.

]]--

--Remove these to items if they are found.
if line == "&lt;/pre&gt;&lt;pre&gt;&lt;font size=+1&gt;&lt;b&gt;Checking the approach status of &amp;quot;.&amp;quot;&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;"
	or line == "&lt;hr&gt;" then
  --Delete main's line if we are not displaying it to screen
  if not tecRoomObjects.displayToScreen then 
    deleteLine() 
    disableTrigger("&lt;hr&gt;") 
  end
	
--pull character name from output.
elseif line:match("^%d+:") then --if line starts with "#: "
	
	--holds check if characting being checked is engaging our players character
	local characterStatus = nil
	local tecCharacterShort = nil
	--Keep track of how many times a simular target has been found. Needed to accurately interact
	--with targets that have the same shortname. Starts at 1 because 1 is the current short name
	local tecNameMatches = 1
	
	--pulls the match text from the line using a string match
	--tecRoomObjects.characters[tecRoomObjects.lc], characterStatus = line:match("^%d+:([ %a+%-?%a?,?]+)([%s%(]?)")
	tecRoomObjects.characters[tecRoomObjects.lc], characterStatus
  --= line:match("^%d+:([ %a+%-?%a?,?]+)([%(%a+%)]?)")
  = line:match("^%d+:([ %a+%-?%a?,?]+)%s?([%s?%(%a%)]*)")
  
	--remove the space at the start of the character name. We need those other spaces...
	tecRoomObjects.characters[tecRoomObjects.lc] = tecRoomObjects.characters[tecRoomObjects.lc]:sub(2)

	--If there are any leading a's or an's use the second word for targeting
	--tec has an odd system where you can look at "a man" but you can not attack "a man"
	tecCharacterShort = tecRoomObjects.characters[tecRoomObjects.lc]:match("^[a ]?[an ]?(%a+%-?%a?)")

		--Loop through all previous character names, looking for previous shortname matches.
	for i = (tecRoomObjects.lc - 1), 1, -1 do
		debugToDisplay("Loop Count: "..tostring(i))

		--Collect short name of previous characters
		local tmpCharacterShort = tecRoomObjects.characters[i]:match("^[a ]?[an ]?(%a+%-?%a?)")

		--if the current short name matches a previous one keep track of the count.
		if tecCharacterShort == tmpCharacterShort then
			tecNameMatches = tecNameMatches + 1
		end --end if character short name previously existed.
	end --end for look for short names matches

  if getTECDebugMode() then --if debug mode is on
  	debugToDisplay("Room Objects, Character: "
  		..tecRoomObjects.characters[tecRoomObjects.lc]
  		.." Loop Count: "..tecRoomObjects.lc
  		.." Status: "..characterStatus
  		.." Short Name: "..tecCharacterShort
  	) --end displayToDebug
  end --end if debug is on.

  local characterPrefix = "" --holds status of character or _

	--This ( only occurs if your character is approached. If your character is approached.
	if characterStatus:match("%(engaging%)") then
  
    --Last character of an engaged name will be a space, this removes it.
    tecRoomObjects.characters[tecRoomObjects.lc] = tecRoomObjects.characters[tecRoomObjects.lc]:sub(1,-2)
    
    --check if the character is (unconscious)
    if characterStatus:match("unconscious") then 
      characterPrefix = tecSettings.ApproachedCharactersColor.."KO: "
    else --if they are not unonscious prefice with a _ instead
      characterPrefix = tecSettings.ApproachedCharactersColor.."_"
    end
    
    local localApproachedCmdList = {
		--apprachedCommandList is list of commands for characters that have approached yours
		--tecNameMatches is now many times something with the same short name was previously found
		--tecCharacterShort is the first word after a in a name. We can not target with full name.
		tecSettings.approachedCommandList[1]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.approachedCommandList[2]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.approachedCommandList[3]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.approachedCommandList[4]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.approachedCommandList[5]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.approachedCommandList[6]..tostring(tecNameMatches).." "..tecCharacterShort..[["]]}
    
    local localApproachedCmdHelp = { 
		--Tool bar tips that show on mouse over and right click.
		tecSettings.approachedCommandHelp[1], 
		tecSettings.approachedCommandHelp[2], 
		tecSettings.approachedCommandHelp[3],
		tecSettings.approachedCommandHelp[4],
		tecSettings.approachedCommandHelp[5],
		tecSettings.approachedCommandHelp[6]}
    
		--create a right clickable list with the characters full name.
		hechoPopup(roomCharacters.rightConsole.name,
      characterPrefix..tecSettings.ApproachedCharactersColor
      ..tecRoomObjects.characters[tecRoomObjects.lc].."_",
      localApproachedCmdList,
      localApproachedCmdHelp, true)
    --create right clickable list for MultiWIndow roomCharacters console
    hechoPopup(MultiWindow.roomCharacters.rightConsole.name,
      characterPrefix..tecSettings.ApproachedCharactersColor
      ..tecRoomObjects.characters[tecRoomObjects.lc].."_",
      localApproachedCmdList,
      localApproachedCmdHelp, true)
      
    --new line only the right consoles, or approached consoles.
    echoRightRoomCharacterWindows("\n")
    
	else
    --check if the character is (unconscious), prefice with KO:
    if characterStatus:match("unconscious") then 
      characterPrefix = tecSettings.ApproachedCharactersColor.."KO: "
    else --if they are not unonscious prefice with a _ instead
      characterPrefix = tecSettings.notApproachedCharacterColor.."_"
    end
    
    local localNotApproachedCmdList = {
		--list of commands for characters not approached to yours.
		--refer to approached logic explination above for reference.
		tecSettings.commandList[1]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.commandList[2]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.commandList[3]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.commandList[4]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.commandList[5]..tostring(tecNameMatches).." "..tecCharacterShort..[["]],
		tecSettings.commandList[6]..tostring(tecNameMatches).." "..tecCharacterShort..[["]]}
    local localNotApproachedHelpList = { 
		--Tool bar tips that show on mouse over and right click.
		tecSettings.commandHelp[1], 
		tecSettings.commandHelp[2], 
		tecSettings.commandHelp[3],
		tecSettings.commandHelp[4],
		tecSettings.commandHelp[5],
		tecSettings.commandHelp[6]}
		--characters that are not approached to the players
		hechoPopup(roomCharacters.console.name,
      characterPrefix..tecSettings.notApproachedCharacterColor
      ..tecRoomObjects.characters[tecRoomObjects.lc].."_",
		  localNotApproachedCmdList,
		  localNotApproachedHelpList, true)
    hechoPopup(MultiWindow.roomCharacters.console.name,
      characterPrefix..tecSettings.notApproachedCharacterColor
      ..tecRoomObjects.characters[tecRoomObjects.lc].."_",
		  localNotApproachedCmdList,
		  localNotApproachedHelpList, true)
    
    --new line only the left consoles or approached consoles
    echoLeftRoomCharacterWindows("\n")
	end --end if else characterEnaged == "("
  
  tecScrollBarCheck(roomCharacters.console.name) --check if a scroll bar is needed.
  tecScrollBarCheck(MultiWindow.roomCharacters.console.name)
  tecScrollBarCheck(MultiWindow.roomCharacters.rightConsole.name)
  
	--Delete main's line if we are not displaying it to screen
  if not tecRoomObjects.displayToScreen then deleteLine() end
	
	--iterate our loop counter
	tecRoomObjects.lc = tecRoomObjects.lc + 1
	
elseif line == "&lt;/pre&gt;" then --end of ac . command found.
	--disable room check for characters. This is the end of the check.
	setTECRoomCheckActive(false)
  deleteLine() --Make is so line does not appear in main console.
  
--if it is dark set RoomCheck to false so it does not remain active.
elseif line:match("It is too dark to see anything.") then
  setTECRoomCheckActive(false) --disable room check for characters.
  --clearRoomCharacterWindow()
  echoLeftRoomCharacterWindows("It is too dark to see anything.")

elseif line:match("Your immediate surroundings are obscured by darkness") then
  setTECRoomCheckActive(false) --disable room check for characters.
  --clearRoomCharacterWindow()
  echoLeftRoomCharacterWindows("It is too dark to see anything.")
  
--if player is stunned set RoomCheck to false so it does not remain active.
elseif line:match("You can't do that while stunned.") then
  setTECRoomCheckActive(false) --disable room check for characters.
  --clearRoomCharacterWindow()
  echoLeftRoomCharacterWindows("You can't do that while stunned.")
  
--if player is unconcious RoomCheck to false so it does not remain active.
elseif line:match("You can't do that while unconcious.") then
  setTECRoomCheckActive(false) --disable room check for characters.
  --clearRoomCharacterWindow()
  echoLeftRoomCharacterWindows("You can't do that while unconcious.")
end --if line has a ac . character in it.

--No else, becase if it isn't one of the items we are looking for above.
--We want to make certain to keep it.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return getTECRoomCheckActive()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>stats</name>
				<script>--[[
to collect data when the character runs the commands we will want aliases for all the ways
the stats command can be run. Including short hand versions
Those aliases will set statsCheckActive.
A seporate bool will controll if the command is still shown to screen. statsFilter.displayToScreen
Collect data into a table. parthiaPlayer.CurrentCharacter.name
References
https://www.lua.org/pil/20.2.html string patterns
https://wiki.mudlet.org/w/Manual:String_Functions
]]--

--count number of lines that has shown since sending stats command.
--it should only be 34 lines. If it is more than 35 there is an error.
--Stop the filter to avoid issues.
statsFilter.lineCount = statsFilter.lineCount + 1
if statsFilter.lineCount &gt; 37 then --if loop count higher than number of lines a stats message should be
  setStatsCheckActive(false) --disable the stats check
  tecWarningNotification("trigger stats, run for more 37 lines.")
end --if statsFilter.lineCount &gt; 37

--Remove these to items if they are found.
if line:match("This command is only available in the world of Midlight. Please enter the game to use it.") then --if player is in welcome area
  if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  setStatsCheckActive(false) --tell Parthia we will not be collecting stats data
elseif line == ""
or line == "Attributes:"
or line == "Character Background"
or line == "Physical Characteristics"
or line == "To see a list of skills and actions your character knows, type: skills"
or line == "You are currently sitting.  Stats are shown in real time.  Stand up to see your maximum stats."
or line == "You are currently laying.  Stats are shown in real time.  Stand up to see your maximum stats."
or line:match("^Character Sheet for")
or line:match("&lt;/pre&gt;&lt;pre&gt;&lt;font size=%+1&gt;&lt;b&gt;Character Sheet for %w+%s?%w*&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;") then
  if not statsFilter.displayToScreen then deleteLine() end --Delete main's line if we are not displaying it to screen
elseif line == "&lt;hr&gt;" then
  if not statsFilter.displayToScreen then --if we do not want to display images to screen
    deleteLine() --remove so it will not be displayed
    disableTrigger("&lt;hr&gt;") --disable seporator trigger so it is not drawn
  end --if not statsFilter.displayToScreen
elseif line == "&lt;/pre&gt;" then --end of stats command found.
	setStatsCheckActive(false)--disable stats filter, it is done
  deleteLine() --Make is so line does not appear in main console.
else --all other lines we will want to look for data to collect
  if line:match("^Name:") then --line starts with Name:
    parthiaPlayer.CurrentCharacter.name, parthiaPlayer.CurrentCharacter.homeLand = 
    line:match("^Name: (%a+%s%a+%s?%a*)%s*Homeland: (%a+%s?%a*)") --collect name and homeland
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Marital Status:") then
    parthiaPlayer.CurrentCharacter.maritalStatus = line:match("Marital Status: (%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Citizenship Status:") then
    parthiaPlayer.CurrentCharacter.citizenshipStatus = line:match("Citizenship Status: (%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Popularity: ") then
    parthiaPlayer.CurrentCharacter.popularity = line:match("Popularity:%s+(%d+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Age: ") then
    parthiaPlayer.CurrentCharacter.age = line:match("Age:%s+(%d+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Height:") then
    parthiaPlayer.CurrentCharacter.height,
    parthiaPlayer.CurrentCharacter.weight,
    parthiaPlayer.CurrentCharacter.handed
    = line:match("^Height:%s(%d%p%s%d+)&amp;quot;%s+Weight:%s(%d+%s%a+%p)%s+Handed:%s(%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
    --put " on the end of the string, we did not capture it.
    parthiaPlayer.CurrentCharacter.height = parthiaPlayer.CurrentCharacter.height..[["]]
  elseif line:match("^Eyes: ") then
    parthiaPlayer.CurrentCharacter.eyes,
    parthiaPlayer.CurrentCharacter.hair,
    parthiaPlayer.CurrentCharacter.complextion
    = line:match("^Eyes:%s(%a+)%s+Hair:%s(%a+)%s+Complexion:%s(%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Health Points: ") then
    parthiaPlayer.CurrentCharacter.health,
    parthiaPlayer.CurrentCharacter.maxHealth,
    parthiaPlayer.CurrentCharacter.fatigue,
    parthiaPlayer.CurrentCharacter.state
    = line:match("^Health Points: (%d+)\/(%d+)%s+Fatigue:%s(%d+)%%%s+State:%s(%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Load: ") then
    parthiaPlayer.CurrentCharacter.load
    = line:match("Load:%s(%d+)%s%a+%.")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Encumbrance: ") then
    parthiaPlayer.CurrentCharacter.encumbrance
    = line:match("Encumbrance: You are bearing a (%a+) load%p")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Position: ") then
    parthiaPlayer.CurrentCharacter.position
    = line:match("Position: (%a+)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Agility: ") then
    parthiaPlayer.CurrentCharacter.agility,
    parthiaPlayer.CurrentCharacter.appearance
    = line:match("Agility:%s+(%a+%s%a*%s?%a*)%s+Appearance:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Charisma: ") then
    parthiaPlayer.CurrentCharacter.charisma,
    parthiaPlayer.CurrentCharacter.dexterity
    = line:match("Charisma:%s+(%a+%s%a*%s?%a*)%s+Dexterity:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Empathy: ") then
    parthiaPlayer.CurrentCharacter.empathy,
    parthiaPlayer.CurrentCharacter.endurance
    = line:match("Empathy:%s+(%a+%s%a*%s?%a*)%s+Endurance:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Judgement: ") then
    parthiaPlayer.CurrentCharacter.judgement,
    parthiaPlayer.CurrentCharacter.memory
    = line:match("Judgement:%s+(%a+%s%a*%s?%a*)%s+Memory:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Perception: ") then
    parthiaPlayer.CurrentCharacter.perception,
    parthiaPlayer.CurrentCharacter.reasoning
    = line:match("Perception:%s+(%a+%s%a*%s?%a*)%s+Reasoning:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Speed: ") then
    parthiaPlayer.CurrentCharacter.speed,
    parthiaPlayer.CurrentCharacter.strength
    = line:match("Speed:%s+(%a+%s%a*%s?%a*)%s+Strength:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  elseif line:match("^Willpower: ") then
    parthiaPlayer.CurrentCharacter.willpower
    = line:match("Willpower:%s+(%a+%s%a*%s?%a*)")
    if not statsFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  end --if line:match("^Name:")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return getStatsCheckActive()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>condition</name>
				<script>--[[
count number of lines that has shown since sending stats command.
it should only be 34 lines. If it is more than 35 there is an error.
Stop the filter to avoid issues.

example output of condition command
You have assumed a wary combat posture.
You are fighting with everything you have.
You are unwounded.
Your right hand is bandaged.
&lt;/font&gt;&lt;font color="#00cd20"&gt;You feel well-rested.&lt;/font&gt;
You are famished.
Your mouth is rather dry.
You are bearing a significant load.
]]--

--keep track of how many lines have displayed since runn command, end check if it has gone too long.
conditionFilter.lineCount = conditionFilter.lineCount + 1
if conditionFilter.lineCount &gt; 8 then --if loop count higher than number of lines a stats message should be
  setConditionCheckActive(false) --disable the stats check
  tecWarningNotification("trigger condition, run for more 8 lines.")
end --if statsFilter.lineCount &gt; 8

if conditionFilter.lineCount == 1 and
   line:match("^You have assumed a") then --if line number and line contents are correct
  parthiaPlayer.CurrentCharacter.combatPosture =  line:match("^You have assumed a (%a+)") --collect combat posture
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 2 and 
       line:match("^You are fighting") then --if line number and line contents are correct
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 3 and
       line:match("^You ") then
  parthiaPlayer.CurrentCharacter.wounds = line:match("^(.*)$") --if line number and line contents are correct
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 4 and
       (line:match("^Your ")  or line == "") then --if line number and line contents are correct
  if line == "" then --if line is empty
    parthiaPlayer.CurrentCharacter.stitchedOrBandaged = "none"
  else --line does not == ""
    parthiaPlayer.CurrentCharacter.stitchedOrBandaged = line:match("^(.*)$")
  end --if line == ""
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 5 and 
       line:match("&gt;You ") then --if line number and line contents are correct
  parthiaPlayer.CurrentCharacter.rested = line:match("&gt;(You .*)&lt;\/font&gt;$")
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 6 and
       line:match("^You ") then --if line number and line contents are correct
  parthiaPlayer.CurrentCharacter.hunger = line:match("^(.*)$")
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 7 and 
       line:match("^You") then --if line number and line contents are correct
  parthiaPlayer.CurrentCharacter.thirst = line:match("^(.*)$")
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
elseif conditionFilter.lineCount == 8 and
       line:match("^You are bearing") then --if line number and line contents are correct
  parthiaPlayer.CurrentCharacter.encumbrance = line:match("^You are bearing a (%a+) load.$")
  if not conditionFilter.displayToScreen then deleteLine() end --if not displaying to screen, remove line from main
  setConditionCheckActive(false) --last line reached, disable check
end --if conditionFilter.lineCount == 1</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return getConditionCheckActive()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Login</name>
			<script>--[[
Loin process is:
TEC sends line "Login: " mudlet trigger "Login" remove the Login: line from screen then sends the Zealous handshake to TEC
TEC then sends line "SECRET NONE" we capure this with trigger "SECRET Triger" that trigger prompts the user for their username.
  It registers function authenticationInput(_, command) in the scripts section group Events as a sysDataSendRequest event
  Trigger also sets bool tecUsernameEntry to true so the authenticationInput function nows it will receive a username
  If the user entered their user name at mudlet's connect screen it will automatically be captured by authenticationInput as the username.
When authenticationInput receives a user name it sets tecUsernameEntry to false, tecPasswordEntry and prompts the user for their password.
  If the user entered their password at mudlet's connection screen it will automatically be captured by this event.
  After reciving a password the function authenticationInput sends the ID and password to a TEC server requesting an authorization key.
  This request is done with a http post, header "Cookie" variable "biscuit=test". Over a secure ssl or tls https connection. Currently using a shell call that uses cURL.
  If the username or password is incorrect authenticationInput restarts the login process. Requiring the user to enter ID and password at mudlet's command prompt.
  When a good key is received that key is sent inplace of the password over the unsecure telnet connection encrypted as a md5 hash.
  When a successful login occurs the sysDataSendRequest event that registered authenticationIput is unregistered.
]]--</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Login</name>
				<script>--[[
Triggers when TEC sends login prompt.
This trigger WILL fail if the developers stop having a blank space
after the login it is not "Login:" it is "Login: "
]]--

DownloadGitReleaseJSON() --check if updates are needed

--deleteLine() --remove line from main console. line variable remains unchanged.
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!

pecho("Login delayed for one second while Parthia checks for updates.\n")

--This trigger function does the client handshake for the user.
tempTimer(1, [[send("SKOTOS Zealous 0.7.12.2", false)]]) --sending the zealous handshake, wait for half a second so the update message appears first.

debugToDisplay("trigger Login, sent command SKOTOS Zealous 0.7.12.2")

--The login control continues in TEC CLient Triggers - login - Secret Triger</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Login: </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>SECRET Triger</name>
				<script>--The system has passed us SECRET NONE after we have provided the handshake.
--This only works because this is the only time the system passes us SECRET NONE.
--Now we need to get the USER ID from the user.

if getParthiaTalk() then --if parthia talk is enabled
  selectCurrentLine() --select current line in main.
  replace("") --Erase text from main. Otherwise variable line will apear on console.
  deselect() --Don't forget your deselects!
  cecho("Create an ID or test login at https://login.eternalcitygame.com/login.php\n")
else --if parthia talk is not enabled
  deleteLine() --remove line from main console. line variable remains unchanged.
  cecho("Create an ID or test login at ")
  cechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;https://login.eternalcitygame.com/login.php", 
  [[openUrl("https://login.eternalcitygame.com/login.php")]], 
  "Create user ID for TEC", true)
  cecho("\n")
end --if getParthiaTalk()

if not passwordInputEventID then --if an authenticationInput event does not already exist.
  debugToDisplay("trigger SECRET Triger, starting sysDataSendRequest event handler to function authenticationInput")
  passwordInputEventID = registerAnonymousEventHandler("sysDataSendRequest", "authenticationInput") --capture user input.
end --if not passwordInputEventID
tecUsernameEntry = true --tell the event handler authenticationInput that the next command entered is the user's username
pecho("Please enter your username.")

--Login control continues in Scripts -&gt; Events -&gt; authenticationInput(_, command)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>SECRET NONE</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Failed Login</name>
				<script>connectToServer("tec.skotos.net", 6730) --reconnect if there is a disconnect at login.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>If you still have difficulties, please contact tec-support@skotos.net.</string>
					<string>Enter your password: </string>
					<string>Either that user does not exist or has a different password.</string>
					<string>Invalid user info.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Successful login</name>
				<script>--triggers after a successful login

if passwordInputEventID then --we no longer need to listen for ID or password
  killAnonymousEventHandler(passwordInputEventID) --remove the event that listens for ID and password
  passwordInputEventID = false
end

if tecUsername then tecUsername = nil end --remove the username, it is no longer needed

--Set default text in room characters window
tecResetRoomCharacterWindow()

--collect player data, 1 second wait due to one command per second limitation
--runConditionCollection(false)
parthiaPlayer.CurrentCharacter = { }
local statsCollectionTimer = tempTimer(1.1, [[runStatsCollection(false)]])

parthiaMap.notMovement = true --tell parthiaMap.Move function this is not actual movement.

parthiaStopScripts() --stop all automation scripts</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>&lt;center&gt;*** Login successful</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>welcome message</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>== replacement</name>
					<script>myFormatter = demonnic.TextFormatter:new( {
  width = (getColumnCount() - 1), 
  cap = "---------",
  capColor = "&lt;gray&gt;",
  textColor = "&lt;gray&gt;"
})
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!
echo("\n")
cecho(myFormatter:format("---------"))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>===============================================================================</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Correct bad copy right</name>
					<script>local myFormatter = demonnic.TextFormatter:new( { --use ftext function to center text.
    width = (getColumnCount() - 1), --width of main console -1 is so autowrap no trigger
    textColor = "&lt;gray&gt;"
  })
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!
--echo("\n")
cecho(myFormatter:format("(c)1996-2020 Skotos Tech")) --echo out out ftext</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>                           (c)1996-2013 Skotos Tech</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Welcome to The Eternal City</name>
					<script>local myFormatter = demonnic.TextFormatter:new( { --use ftext function to center text.
    width = (getColumnCount() - 1), --width of main console -1 is so autowrap no trigger
    textColor = "&lt;gray&gt;"
  })
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!
cecho("\n")
cecho(myFormatter:format("Welcome to The Eternal City")) --echo out out ftext

if getParthiaTalk() then ttsSpeak(".") end --steps the queue from hanging up</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>                          Welcome to The Eternal City</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Welcome to The Eternal City second</name>
					<script>--local myFormatter = demonnic.TextFormatter:new( { --use ftext function to center text.
--    width = (getColumnCount() - 1), --width of main console -1 is so autowrap no trigger
--    textColor = "&lt;gray&gt;"
--  })
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!
--echo("\n")
--pecho(myFormatter:format("Welcome to The Eternal City")) --echo out out ftext</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>                         Welcome to The Eternal City!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>-- replacement</name>
					<script>local myFormatter = demonnic.TextFormatter:new( { --use ftext function to center text.
    width = (getColumnCount() - 1), --width of main console -1 is so autowrap no trigger
    textColor = "&lt;gray&gt;"
  })
selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!
echo("\n")
cecho(myFormatter:format("-----")) --echo out out ftext</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>                       --------------------------------</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>password troubles</name>
					<script>selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>          If you are having any password or other connection troubles</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>please send mail to ce@skotos.net</name>
					<script>selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>                       please send mail to ce@skotos.net</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>&lt;xch_page clear="text" /&gt;</name>
					<script>selectCurrentLine() --select current line in main.
replace("") --Erase text from main. Otherwise variable line will apear on console.
deselect() --Don't forget your deselects!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>&lt;xch_page clear="text" /&gt;</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Text Filters</name>
			<script>--!!!!!!!!!!!!!!!!!!READ BEFORE CHANGING FILTER CODE!!!!!!!!!!!!!!!!!!!!!
--Needed because TEC does not support GMCP or MSDP
--so TEC outputs health bar, compass and other gui elements
--over text with telnet...

--ORDER OF THESE ITEMS ARE IMPORTANT!!!
--These are intended to be in an order that will allow for
--optimal performance.
--I have placed items that delete the main line first
--This removes the number of color filter triggers that occurs.
--No we are never going to clean code enough to free up for the use of a mapping system.
--Let's try any way!

--so they don't get filtered wasting processor time</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>delete lines</name>
				<script>--Lines that are not needed. Because we do not use html tags as of yet.
--&lt;pre&gt; would never have a function for us reguardless.

deleteLine() --remove line from main console. line variable remains unchanged.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>&lt;/pre&gt;</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>&lt;hr&gt;</name>
				<script>  myFormatter = demonnic.TextFormatter:new( {
    width = (getColumnCount() - 1), 
    cap = "---------",
    capColor = "&lt;gray&gt;",
    textColor = "&lt;gray&gt;"
  })
  selectCurrentLine() --select current line in main.
  replace("") --Erase text from main. Otherwise variable line will apear on console.
  deselect() --Don't forget your deselects!
  echo("\n")
  cecho(myFormatter:format("---------"))</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>&lt;hr&gt;</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Text Filters</name>
				<script>--trigger mean all lines have this trigger occur.
--prel regex allows for triggers with special mudlet functions for text searching
--^means start of line. Nothing after it means line with anything in it

--hreplace Code provided by s/Mud/Game on mudletdiscord. THANK YOU s/Mud/Game!!!!

enableTrigger("&lt;hr&gt;") --Some scripts disable trigger enable it if it is disabled

selectCurrentLine() --select current line in main console.
--pull the text from the current line in main into filteredLine variable.
--What would appear in the main window's newest line is now in filteredLine
filteredLine , _ , _ = getSelection() --_ prevents the variable from being retained
deselect() --unselect line in main.

if not filteredLine then filteredLine = "" end --if nothing was in main make filteredLine empty.
--Without this you will receive errors that filteredLine is nil.

--Replaces what is in brackets with what is in quotes
filteredLine = string.gsub(filteredLine, [[&amp;lt;]], "&lt;")
filteredLine = string.gsub(filteredLine, [[&amp;gt;]], "&gt;")
filteredLine = string.gsub(filteredLine, [[&amp;quot;]], "\"")
filteredLine = string.gsub(filteredLine, [[&amp;amp;]], "&amp;")

--text below will entirely remove the code in the brackets
--For these items we may want to create formating rules.
--Though more likely much easier would be to replace the
--commands that uses these with alias. Read in the lines 
--than format with ftext
filteredLine = string.gsub(filteredLine, [[&lt;hr&gt;]], "")
filteredLine = string.gsub(filteredLine, [[&lt;/pre&gt;]], "")
filteredLine = string.gsub(filteredLine, [[&lt;pre&gt;]], "")
filteredLine = string.gsub(filteredLine, [[&lt;b&gt;]], "")
filteredLine = string.gsub(filteredLine, [[&lt;/b&gt;]], "")

--Removing &lt;font size=+1&gt;
--The double operators appear to cause issues.
--%p is puncuation. No + after because we know there is only one punctuation to wild after =
--So now instead of double operators we have an operator and
--a single wild declaration that must be a puncuation. So + in this case.
filteredLine = string.gsub(filteredLine, [[&lt;font size=%p1&gt;]], "")

--There should be code here to see if the line now has no viewable text.
--Not nil or wild, because it may be nothing but spaces. Spaces are something.
--it should include encapsulate the add default color code if below

if [[&lt;ul&gt;]] == string.match(filteredLine, [[&lt;ul&gt;]]) then
  --if we find a ul we need to tab an additional tab.  
  tecInventorySpacer = tecInventorySpacer.."\t"
  --and replace all occurances of &lt;ul&gt;
  filteredLine = filteredLine:gsub([[&lt;ul&gt;]], "")
end --line match &lt;ul&gt;

if [[&lt;/ul&gt;]] == string.match(filteredLine, [[&lt;/ul&gt;]]) then
  --Replace ONE tab in tecInventorySpacer  
  tecInventorySpacer = tecInventorySpacer:gsub("\t", "", 1)
  --and replace all occurances of &lt;/ul&gt;
  filteredLine = filteredLine:gsub([[&lt;/ul&gt;]], "")
end --line match &lt;/ul&gt;

--replace all &lt;li&gt; with appropriate spacing created above.
filteredLine = string.gsub(filteredLine, [[&lt;li&gt;]], tecInventorySpacer:gsub("\t", "", 1))

--if we reached the end of out unsorted lists blank out tecInventorySpacer
--It should be blank, but just in case...
if [[&lt;/ul&gt;]] == filteredLine then tecInventorySpacer = "" end

--Removed all non hex code html tags from filtered line.
--At this point send the filter out anything unwanted in the tts system parthia talk
parthiaTalkLine = parthiaTalkFilter(filteredLine)

--Removes what is in brackets
--Make filtered line a copy of the main line, removing all &lt;/font&gt; declarations
--string.gsub referece: https://wiki.mudlet.org/w/Manual:String_Functions
--string.gsub('The whole string to modify', 'what to replace in the string', 'what to replace it with')
--replace /font with default color. This adds support for old color standard.
--Old standard was 'gray text with white highlights'
filteredLine = string.gsub(filteredLine, [[&lt;/font&gt;]], tecSettings.tecTextColor)

--string.gsub referece: https://wiki.mudlet.org/w/Manual:String_Functions
--string.gsub('The whole string to modify', 'what to replace in the string', 'what to replace it with')
--%1 is whatever is inside of the ()
--if you get &lt;font color="#000000 %1 is 000000
--so it's replacing &lt;font color="#000000&gt; with &lt;#000000&gt;
filteredLine = string.gsub(filteredLine, '&lt;font color="#(%x+)"&gt;', '#%1')
--So now all &lt;font color="#hexcolorcode have turned into &lt;#hexcolorcode&gt; in replacement this is a standard format lua can work with.
	
--turn all black text declarations into tecTextColor
filteredLine = string.gsub(filteredLine, "#000000", tecSettings.tecTextColor)
--turn all gray text declarations into tecTextColor
filteredLine = string.gsub(filteredLine, "#646464", tecSettings.GrayTextColor)
--Change TECs default blue
filteredLine = string.gsub(filteredLine, "#0020ff", tecSettings.BlueTextColor)
--Change TECs default green
filteredLine = string.gsub(filteredLine, "#00cd20", tecSettings.GreenTextColor)
--Change TECS default purple
filteredLine = string.gsub(filteredLine, "#e119e1", tecSettings.PurpleTextColor)

--if background is dark turn #000000 into #c0c0c0
--local redBG, greenBG, blueBG = getBgColor() --get main console background color
--if redBG &lt; 75 and greenBG &lt; 75 and blueBG &lt; 75 then --if the background is very dark, use light text
--	tecSettings.tecTextColor = "#c0c0c0" --setting to very light text. This should probably be a default variable
--end

--if the line does not have a color code in it.
--insert the default color code at the start 
--# is what all the color codes start with
--%x means hexadecimal number 
--+ means multiple, in this case hexadecimal numbers
if "#%x+" ~= string.match(filteredLine, "#%x+") then
	filteredLine = tecSettings.tecTextColor..filteredLine --Add current text color to the start of the line
end

--if text needs to be centered.
if "&lt;center&gt;" == string.match(filteredLine, "&lt;center&gt;") then
	
	--remove hex color codes @ &lt;center&gt; from filteredLine
	filteredLine = string.gsub(filteredLine, "#%x+", "")
	filteredLine = string.gsub(filteredLine, "&lt;center&gt;", "")
	filteredLine = string.gsub(filteredLine, "&lt;/center&gt;", "")
	
  local myFormatter = demonnic.TextFormatter:new( { --use ftext function to center text.
    width = (getColumnCount() - 1), --width of main console -1 is so autowrap no trigger
    textColor = "&lt;gray&gt;"
  })
	selectCurrentLine() --select current line in main.
	replace("") --Erase text from main. Otherwise variable line will apear on console.
	deselect() --Don't forget your deselects!
  cecho(myFormatter:format(filteredLine)) --echo out out ftext
  
else --text that does not need to be centered.
 
	selectCurrentLine() --select current line in main.
	replace("") --Erase text from main. Otherwise variable line will apear on console.
	--hreplace(filteredLine) --insert text into console. Replacing hex color codes with colored text.
	deselect() --Don't forget your deselects!
  hecho(filteredLine)
  
end --if &lt;center&gt; in line else hreplace.

--now send to the tts system parthia talk
if getParthiaTalk() then --if parthiaTalk is enabled send filteredLine to it.
  if parthiaTalkLine ~= "" then
    pecho(parthiaTalkLine, true) --send the filtered line to queue.
  end --if not parthiaTalkLine == "" then
end --if getParthiaTalk() then

if getHelpDevs() then --if player has HelpTheDevs enabled
end --if getHelpDevs()

--displays unfiltered line to debug screen.
--display with setTECDebugMode(true)
--or command line: debug on
debugToDisplay("Unfiltered line: "..line)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>communications</name>
			<script>--&lt;/font&gt;&lt;font color="#0020ff"&gt;&amp;lt;Avidia thinks aloud: Client, if you will, come to Ylsa's?&amp;gt;&lt;/font&gt;
--&lt;/font&gt;&lt;font color="#0020ff"&gt;&amp;lt;Arteus thinks aloud: Yep.&amp;gt;&lt;/font&gt;
--&lt;/font&gt;&lt;font color="#0020ff"&gt;&amp;lt;Aoden thinks aloud: We have found all the secrets. No cliffs.&amp;gt;&lt;/font&gt;
--Piqolo wakes up.&lt;/font&gt;</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Thoughts</name>
				<script>--trigger is for how think declarations appear in the main line.
--Not for how it appears in filteredLine
--The third item that appears nearly identical to the first is needed for patricians.
--Their first and last names appear in thoughts and speech.

--This trigger puts thoughts to the  communicationsAll window 
--and to thoughts window.

--https://wiki.mudlet.org/w/Manual:UI_Functions#hecho
--Echo to Communication window, coloring hex colors
hecho("Communication", filteredLine.."\n")

--Echo to Thoughts Window, coloring hex showColors
hecho("Thoughts", filteredLine.."\n")

--speak thoughts if parthia talk is disabled and parthia talk thoughts is enabled
if not getParthiaTalk() then --if parthia talk is enabled.
  if parthiaTalkGetThoughts() then --if parthia talk thoughts is enabled
    pecho(filteredLine, true, true) --speak filteredLine, even if parthia talk is disabled
  end --if parthiaTalkGetThoughts()
end --if not getParthiaTalk()

--[[ Don't use the technique below
it will cause filters to fail for a short time when too many
triggers occuring in succession.

selectCurrentLine() --Selects ENTIRE line including line breaks.
copy() --Copies CURRENT selection to clipboard
appendBuffer("Communication") --paste copied text to miniConsole
selectCurrentLine() --Selects ENTIRE line including line breaks.
copy() --Copies CURRENT selection to clipboard
appendBuffer("Thoughts") --paste copied text to miniConsole
]]--</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^&lt;/font&gt;&lt;font color="#\w+"&gt;&amp;lt;\w+ thinks aloud:</string>
					<string>&amp;lt;You think aloud: </string>
					<string>^&lt;/font&gt;&lt;font color="#\w+"&gt;&amp;lt;\w+ \w+ thinks aloud:</string>
					<string>^&amp;lt;\w+ thinks aloud: </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>speech</name>
				<script>--This trigger puts speech to the communicationsAll window 
--and to speech window.

--If over triggering becomes a concern
--trigger start of line [[You say, &amp;quot;]]
--prel regex [[^(\w+) says, &amp;quot;]]

--https://wiki.mudlet.org/w/Manual:UI_Functions#hecho
--Echo to Communication window, coloring hex colors
hecho("Communication", filteredLine.."\n")

--https://wiki.mudlet.org/w/Manual:UI_Functions#hecho
--Echo to Communication window, coloring hex colors
hecho("Speech", filteredLine.."\n")

--speak speech if parthia talk is disabled and parthia talk speech is enabled
if not getParthiaTalk() then --if parthia talk is disabled.
  if parthiaTalkGetSpeech() then --if parthia talk speech is enabled
    pecho(filteredLine, true, true) --speak filteredLine, even if parthia talk is disabled
  end --if parthiaTalkGetSpeech()
end --if not getParthiaTalk()

--This method sometimes kills filtering don't use it
--selectCurrentLine() --Selects ENTIRE line including line breaks.
--copy() --Copies CURRENT selection to clipboard
--appendBuffer("Communication")
--Keeping it as a  reminder that sometimes, my code sucks!
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>, &amp;quot;</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Rumors</name>
				<script>--set bool to yes
--input line to CommunicationsAll &amp; rumor bar
--https://wiki.mudlet.org/w/Manual:UI_Functions#hecho
--Echo to Communication window, coloring hex colors
hecho("Communication", filteredLine.."\n")

--https://wiki.mudlet.org/w/Manual:UI_Functions#hecho
--Echo to Communication window, coloring hex colors
--hecho("Rumors", filteredLine.."\n")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>&lt;/font&gt;&lt;font color="#e119e1"&gt;</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Game Events</name>
			<script>--[[
Use to hold triggers that keep track of misc events you would like to run one or more functions for
Like entering a room, or being approached.

We would like to avoid repeated trigger checks so include them all within one check...
]]--</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Player retreats</name>
				<script>--[[
triggers when the player retreats from combat.
triggers when the player falls back from combat.
]]--

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You retreat.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Player is approached</name>
				<script>--triggers when the player is approached.

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>stops next to you.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>character walks into players room</name>
				<script>--triggers when a character enters the players room.

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>walks in</string>
					<string>runs in</string>
					<string>flies in</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>character leave players room</name>
				<script>--triggers when a character leaves the players room.

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>walks away</string>
					<string>runs away</string>
					<string>flies away</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Character Arrives</name>
				<script>--triggers when an NPC is spawned.

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>arrives.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Player enters a room</name>
				<script>--triggers when the player enters a new room.

if parthiaMap.getEnabled() then --if player is using parthiaMap
  parthiaMap.upAvailable = false
  parthiaMap.downAvailable = false
  parthiaMap.TECMapRooms = {} --clear the rooms table so it will not overlap
  parthiaMap.trackPreviousRoom() --movement complete keep track of what the previous room was
  parthiaMap.room.exitEcho = line --record the echo to a variable to sort data from it at a later time.
  parthiaMap.findSpecialExits() --find special exit names for this room and direction walked if not collected already
end --if parthiaMap.getEnabled()

--Set default text in room characters window
tecResetRoomCharacterWindow()

--stop waiting for the drover, so it will not auto follow after a player has walked away while waiting for a drover.
parthiaSetWaitForDrover(false)

addLinksToDirections() --add links to directions in main window. Collect room types for Help Developers commands.

addLinksToCharacters("walk") --add links to characters in main window. Collect character types for Help Developers command.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You arrive at </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Player approaches a character</name>
				<script>--triggers when the player approaches something.

--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You stop next to </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Vision loss</name>
				<script>--Triggers when the player can not see.
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>It is too dark to see anything.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Drover Arrives</name>
				<script>if parthiaGetWaitForDrover() then --if the wait for drover command was run, follow drover when it arrives.
  send("follow drover") --follow the drover
  parthiaSetWaitForDrover(false) --stop waiting for the drover, so it will not auto follow
end --if parthiaGetWaitForDrover()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>A drover makes \w+ way in </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Player Looks</name>
				<script>--[[
runs when player uses the look command WITHOUT anything at the end of the look command.
This trigger fires for 4 lines. Because we KNOW the look command will be 4 lines.
]]--
if lookRan then --if look ran is not false yet.
  lookRan = false --set lookRan to false so this function does not continously run
  lookIterator = 1 --set the look loop counter.
  objectLinksAdded = false --tells function addLinksToObjects we have not added object links to this look
end --if lookRan then

if line:match("You are facing") then --if line has "You are facing" in it we want to use the directions clicks.
  addLinksToDirections() --add links to directions in main window. Collect room types for Help Developers commands.
else --if the line does NOT have "You are facing" in it we want to use the character clicks.
  addLinksToCharacters("look")
end --if line:match("You are facing")

if lookIterator &gt; 2 then addLinksToObjects() end --if we are past the first two lines of the look command.

lookIterator = lookIterator + 1 --add to the look loop counter.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>3</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return lookRan</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>player involved in an action</name>
				<script>--[[
triggers when the player is involved in combat. Either attacking or beind attacked.
text to trigger on &lt;/font&gt;&lt;font color="#00CD20"&gt;[Success: 5, Roll: 73] You punch at a practice dummy, and hit! It suffers a minor hit to its face.&lt;/font&gt;&lt;/font&gt;
]]--

if getHelpDevs() then --if player has help devs
  sortActions() --sort and collects actions into Help The Devs tables
end --if getHelpDevs()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>[Success: </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You are in the middle of something.</name>
				<script>if parthiaMap.getEnabled() then --if player is using parthiaMap
  parthiaMap.dirtectionCollected = false
  mapDebug("trigger You are in the middle of something., possible failed movement found set directionCollected to false.")
end --if parthiaMap.getEnabled()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You are in the middle of something.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>player climbed</name>
				<script>--[[
If the key word climb appeared. There is a seperate pattern that parthiaMap.Move will look for.
  That pattern is if a room has an exit but no room attached to it. We know the room that exit leads to is either a closed door, hidden room or both vertical and horizonal movement (normally steps)
  If we see both a exit that has no room on the Alice TEC Map and the key words You climb are emoted during movement, we know vertical and horizontal movement in a single move is occuring (steps, a ramp or the like)
]]--
parthiaMap.playerClimbed = true --we know the player climbed during this movement.

--[[
We know know the player has climbed.
If up and down are avilable and we have not already detected the movement direction from player input.
We are going to see if up, down or both are avialable.
If only one is detected, we assume player has moved that direction.
If both are available we will compare the exit descriptoinin the echo against the exit descriptions collected from previous mapping
this method may not be needed.
This method would only function when light was not available.


if parthiaMap.getEnabled() then --if player is using parthiaMap
  if not parthiaMap.dirtectionCollected then
    if parthiaMap.upAvailable and (not parthiaMap.downAvailable) then --if only up is available.
      parthiaMap.directionWalked = "up"
      parthiaMap.dirtectionCollected = true
    elseif (not parthiaMap.upAvailable) and parthiaMap.downAvailable then --if only down is available
      parthiaMap.directionWalked = "down"
      parthiaMap.dirtectionCollected = true
    elseif parthiaMap.upAvailable and parthiaMap.downAvailable then --if both up and down are available.
      --collect exit decription from map data.
    end
  end --if not parthiaMap.dirtectionCollected
end --if parthiaMap.getEnabled()
]]--</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You climb </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You aren't doing anything.</name>
				<script>if parthiaGetStopRan() then
  deleteLine() --remove line from main console. line variable remains unchanged.
  parthiaStopRan = false
end --if parthiaStopRan</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You aren't doing anything.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>parthia mapper</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>failed movement</name>
				<script>--in case player types goes a direction that is not available than goes in a different direction
if parthiaMap.getEnabled() then --if player is using parthiaMap
  parthiaMap.dirtectionCollected = false
  mapDebug("trigger failed movement, possible failed movement found set directionCollected to false.")
end --if parthiaMap.getEnabled()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You can't go that way.</string>
					<string>That is an invalid direction.</string>
					<string>You are not next to anything.</string>
					<string>It is too dark to see where you are going.</string>
					<string>^You don't see a &amp;quot;.+&amp;quot; here\.$</string>
					<string>is closed\.$</string>
					<string>You are not next to anything.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>collect exit description</name>
				<script>parthiaMap.descriptionOfExitUsed = matches[2] --stores the description of the exit player used.
mapDebug("trigger collect exit description, collected exit description: "..matches[2])</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You walk through (?:a|an) (.+)\.$</string>
					<string>^You walk to (?:a|an) (.+),</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Obstacle Courses</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Courses 4 Part</name>
				<script>if line:match([[&lt;/font&gt;&lt;font color="#000000"&gt;You are on a wide, grassy field. Little divots across the turf indicate that one or several horses have run across it at some point, perhaps in cavalry practice. The short grass is barely two inches high, and looks to be meticulously kept that way. Jutting from the ground is a brightly glowing lantern hanging from a pole. &lt;/font&gt;]]) then
  if courses.lookRan then 
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go south")]])
  end --if courses.lookRan
elseif line:match([[&lt;font color="#0020ff"&gt;mud pit&lt;/font&gt;&lt;font color="#000000"&gt; to the &lt;/font&gt;&lt;font color="#0020ff"&gt;south&lt;/font&gt;]]) then
  if courses.standingUp then
    tempTimer(1, [[send("stand")]])
    courses.standingUp = false
  else
    tempTimer(1, [[courses.firstStep()]])
  end --if courses.standingUp
elseif line:match("^Several trainers drag you back to the start%.$") then
  courses.standingUp = true
elseif line:match("^You have a feeling this course has no more to offer you at this time%.$") then
  courses.disable(true) --stop running the courses script
elseif line:match("^You must be standing.$") then
  deleteLine() --remove line from main console. line variable remains unchanged.
  tempTimer(1, [[send("stand")]])
elseif line:match("&lt;/font&gt;&lt;font color=\"#%x+\"&gt;You are no longer busy%.&lt;/font&gt;&lt;/font&gt;") then
  tempTimer(1, [[send("go south")]])
elseif line:match("^You arrive at a mud pit") then
  tempTimer(1, [[send("jump rope")]])
elseif line:match([[   &lt;/font&gt;&lt;font color="#000000"&gt;You approach the start of a training course. This challenge is a muddy pit with a beam erected over it. Swinging from the beam is a muddy rope. It looks as though you have to jump at the rope to swing across the pit.  &lt;/font&gt;]]) then
  if courses.lookRan then
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("jump rope")]])
  end
elseif line:match([[^You arrive at a path through swinging weights. You see no obvious exits.&lt;/font&gt;$]]) then
  tempTimer(1, [[send("go path")]])
elseif line:match([[   &lt;/font&gt;&lt;font color="#000000"&gt;This is the second test on this training course. Here you must test your agility by going along a path that has heavy bags of sand swinging across it. The object is to not get hit.  &lt;/font&gt;$]]) then
  if courses.lookRan then
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go path")]])
  end --if courses.lookRan
elseif line:match([[^You arrive at a circular track. You see no obvious exits.&lt;/font&gt;$]]) then
  tempTimer(1, [[send("go track")]])
elseif line:match([[   &lt;/font&gt;&lt;font color="#000000"&gt;This third training area involves a circular track that has a pole spinning around it. You must go along the track, running laps and stay in front of the pole or it will knock you flat.  &lt;/font&gt;$]]) then
  if courses.lookRan then
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go track")]])
  end --if courses.lookRan
elseif line:match([[^You arrive at a bed of hot coals. You see no obvious exits.&lt;/font&gt;$]]) then
  tempTimer(1, [[send("go coal")]])
elseif line:match([[&lt;/font&gt;&lt;font color="#000000"&gt;This place is the last test on this course. You must prove your willpower by walking across the bed of hot coals.  &lt;/font&gt;$]]) then
  if courses.lookRan then
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go coal")]])
  end --if courses.lookRan
else
  if courses.lookRan then
    courses.disable(true) --stop the course script, display a message to the player
    tempTimer(.25, [[pecho("You need to be at the four part obsticle course north of Iridine to run the course.\n")]])
  end --if courses.lookRan
end --if line:match elseif line:match series

courses.lookRan = false --prevents the player running the look command from triggering the script.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return courses.fourPart</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Courses 3 Part</name>
				<script>if line:match("The closely cropped field stretching out around you seems to serve as a drilling field for soldiers and cavalry%.") then
  if courses.lookRan then 
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go east")]])
  end --if courses.lookRan
elseif line:match([[&lt;font color="#%x+"&gt;climbing wall&lt;/font&gt;&lt;font color="#%x+"&gt; to the &lt;/font&gt;&lt;font color="#%x+"&gt;east&lt;/font&gt;]]) then
  if courses.standingUp then
    tempTimer(1, [[send("stand")]])
    courses.standingUp = false
  else
    tempTimer(1, [[courses.firstStep()]])
  end --if courses.standingUp
elseif line:match("^Several trainers drag you back to the start%.$") then
  courses.standingUp = true
elseif line:match("^You have a feeling this course has no more to offer you at this time%.$") then
  courses.disable(true) --stop running the courses script
elseif line:match("^You must be standing.$") then
  deleteLine() --remove line from main console. line variable remains unchanged.
  tempTimer(1, [[send("stand")]])
elseif line:match("&lt;/font&gt;&lt;font color=\"#%x+\"&gt;You are no longer busy%.&lt;/font&gt;&lt;/font&gt;") then
  tempTimer(1, [[send("go east")]])
elseif line:match("^You arrive at a climbing wall") then
  tempTimer(1, [[send("climb rope")]])
elseif line:match("&lt;/font&gt;&lt;font color=\"#%x+\"&gt;This is the first part of this training course. There is a tall wall here. The wall has a rope attached to it and the only way to proceed is to climb the rope.  &lt;/font&gt;$") then
  if courses.lookRan then
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("climb rope")]])
  end --if courses.lookRan
elseif line:match("^You arrive at a pool. You see no obvious exits.&lt;/font&gt;$") then
  tempTimer(1, [[send("go plank")]])
elseif line:match(" &lt;/font&gt;&lt;font color=\"#%x+\"&gt;You are at the second part of this training course. There is a pool here with several planks across it. You must be perceptive and go across the one that doesn't swivel.  &lt;/font&gt;$") then
  if courses.lookRan then 
    tempTimer(.25, [[pecho("You begin to run the course.\n")]])
    tempTimer(1, [[send("go plank")]])
  end --if courses.lookRan
elseif line:match("^You arrive at a dropping pole. You see no obvious exits.&lt;/font&gt;$") then
  tempTimer(1, [[send("go path")]])
elseif line:match("   &lt;/font&gt;&lt;font color=\"#%x+\"&gt;This is the last obstacle in this section of the training field. Before you is a path which goes underneath a rapidly descending beam. You need to run along the path and use your speed to get under the beam before it hits you.  &lt;/font&gt;$") then
  if courses.lookRan then tempTimer(1, [[send("go path")]]) end
else
  if courses.lookRan then
    courses.disable(true) --stop the course script, display a message to the player
    tempTimer(.25, [[pecho("You need to be at the three part obsticle course north of Iridine to run the course.\n")]])
  end --if courses.lookRan
end --if line:match elseif line:match series

courses.lookRan = false --prevents the player running the look command from triggering the script.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return courses.threePart</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Tracking</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tracking</name>
					<script>if matches[2] == "strength" then
  if courses.Strength then
    courses.Strength = courses.Strength + 1
  else
    courses.Strength = 1
  end --if courses.Strength
elseif matches[2] == "speed" then
  if courses.Speed then
    courses.Speed = courses.Speed + 1
  else
    courses.Speed = 1
  end --if courses.Speed
elseif matches[2] == "perception" then
  if courses.Perception then
    courses.Perception = courses.Perception + 1
  else
    courses.Perception = 1
  end --if courses.Perception
elseif matches[2] == "dexterity" then
  if courses.Dex then
    courses.Dex = coursesDex + 1
  else
    courses.Dex = 1
  end --if courses.Dex
elseif matches[2] == "agility" then
  if courses.Agi then
    courses.Agi = courses.Agi + 1
  else
    courses.Agi = 1
  end --if courses.Agi
elseif matches[2] == "endurance" then
  if courses.End then
    courses.End = courses.End + 1
  else
    courses.End = 1
  end --if courses.End
elseif matches[2] == "willpower" then
  if courses.Will then
    courses.Will = courses.Will + 1
  else
    courses.Will = 1
  end --if courses.Will
end --if matches[2] == "strength" elseif</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel as if you have improved your (.+) slightly\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage />
	<ActionPackage />
	<ScriptPackage />
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
