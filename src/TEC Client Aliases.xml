<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage />
	<TimerPackage />
	<AliasPackage>
		<Alias isActive="yes" isFolder="no">
			<name>help</name>
			<script>pecho("\nYour vision blurs as a sudden wealth of information becomes available with a touch you can gain access to:\n")
pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Newbie guide", 
[[openUrl("http://eternal-city.wikidot.com/newbie-guides")]], 
"Guide explaining this games basic interworkings", true)
echo("        ") --There is a bug with cechoLink tabs cause issues

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Character creation guide", 
[[openUrl("http://eternal-city.wikidot.com/character-generator")]], 
"Character creation tutorial", true)
echo("\n\n")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Help Anything", 
[[printCmdLine("help ")]], 
"wiki search", true)
pecho(" Type help followed by anything. "
	.."You will be given a clickable link to search for your question on TEC's wiki.\n\n")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;World maps", 
[[openUrl("http://eternal-city.wikidot.com/maps")]], 
"Maps of all major areas in this game", true)
echo("          ") --There is a bug with cechoLink tabs cause issues

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Hunting grounds", 
[[openUrl("http://eternal-city.wikidot.com/hunting-grounds")]], 
"Maps and explanation of hunting areas", true)
echo("\n\n")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Commands", 
[[openUrl("http://eternal-city.wikidot.com/commands")]], 
"Full list of game commands", true)
echo("            ")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Commune with mortals", 
[[openUrl("https://discord.gg/fevBA8j")]], 
"TEC Discord", true)
echo("\n\n")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;Full respitory of this worlds interworkings", 
[[openUrl("http://eternal-city.wikidot.com/")]], 
"wiki site home", true)
echo("\n\n")

pechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;help client", 
[[tecClientFullHelp(false, "main")]], 
"wiki site home", true)

pecho("\nWith some effort you are able focus your mind and clear your vision back to reality.\n\n")</script>
			<command></command>
			<packageName></packageName>
			<regex>^help$</regex>
			<Alias isActive="yes" isFolder="no">
				<name>Help (.w+)</name>
				<script>if matches[2] == "client" then

else
  --The user tried to get help for something we have not created
  --a help for. So we will search the wiki site for them.
  echo("\nTry as you may you can not remember. Would you like to search the great beyond for\n")
  
  --Turns just the background of the word(s) blue "&lt;color:color&gt;"
  --For font than background colors
  --command is the global for what is in command line.
  --string.sub pulls text from a string. In this case what starts AT
  --Line 6 than after.
  cechoLink("&lt;:"..tecSettings.helpHighlightColor.."&gt;"..string.sub(command, 6), 
  
  --if clicked, opens a link to
  [[openUrl("http://eternal-city.wikidot.com/search:site/q/"..string.sub(command, 6))]], 
  
  --Tool tip that appears when moused over.
  --True if I recall is needed for a bug fix.
  "Search the wiki for: "..string.sub(command, 6), true)
  echo("\n\n")
end --if matches[2] == "client" else</script>
				<command></command>
				<packageName></packageName>
				<regex>^help (.*)</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>help client</name>
				<script>--run the client help command. It is a function so it can be clicked.
tecClientFullHelp(false, "main")</script>
				<command></command>
				<packageName></packageName>
				<regex>^help client$</regex>
			</Alias>
		</Alias>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Display</name>
			<script>UIManagerHelp() --help for client display</script>
			<command></command>
			<packageName></packageName>
			<regex>^display$</regex>
			<Alias isActive="yes" isFolder="no">
				<name>display save</name>
				<script>--saves the gui loadWindowLayout
UIManagerFileSave(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display save</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display load</name>
				<script>--loads the display from file.
UIManagerFileLoad(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display load$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display reset</name>
				<script>--Sets guiframe back to default settings
--these settings can be found in scripts - tec client scripts - community scripts - guiframe
UIManagerReset(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display reset</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Dispay update autowrap</name>
				<script>--set main window word wrap size.
--Function is is scripts - GUI - GUI Functions
setMainWindowAutoWrap()
echo("\nScreen wrap adjusted\n")

--No need to grant users access. This works automatically.</script>
				<command></command>
				<packageName></packageName>
				<regex>^display update autowrap</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display clear</name>
				<script>--clears the main screen.
UIManagerClearMainWindow()</script>
				<command></command>
				<packageName></packageName>
				<regex>^display clear$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display clear characters</name>
				<script>--in tecFunctions - autocheck - room character checks
clearRoomCharacterWindow()
--I don't think players need access to this as it autoruns</script>
				<command></command>
				<packageName></packageName>
				<regex>^display clear characters$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display refresh settings</name>
				<script>tecRefreshSettingsWindow() --reloads the settings window.</script>
				<command></command>
				<packageName></packageName>
				<regex>^display refresh settings$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display scrollbars enable</name>
				<script>tecSetScrollBars(true) --enables scroll bars throughout this project.</script>
				<command></command>
				<packageName></packageName>
				<regex>^display scrollbars enable$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display scrollbars disable</name>
				<script>tecSetScrollBars(false) --Disable scroll bars throughout this project.</script>
				<command></command>
				<packageName></packageName>
				<regex>^display scrollbars disable$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display remove geyserObject</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerShowWindow(matches[2], false, true) --remove geyser object from UI manager.
</script>
				<command></command>
				<packageName></packageName>
				<regex>^display remove (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display add geyserObject</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerShowWindow(matches[2], true, true) --add geyser object from UI manager.</script>
				<command></command>
				<packageName></packageName>
				<regex>^display add (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display window enable</name>
				<script>--echo("captured: "..matches[2]..".\n")
--arguments are windowname, enable, displayToScreen
UIManagerEnableWindow(matches[2], true, true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display window enable (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display window disable</name>
				<script>--echo("captured: "..matches[2]..".\n")
--arguments are windowname, enable, displayToScreen
UIManagerEnableWindow(matches[2], false, true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display window disable (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display window list</name>
				<script>--echo("captured: "..matches[2]..".\n")
--arguments are windowname, enable, displayToScreen
UIManagerEnableWindow("list", true, true)
UIManagerEnableWindow("list", false, true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display window list$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display manager name</name>
				<script>--echo("captured: "..matches[2]..".\n")
SetUIManager(matches[2], true) --set Parthia's UI Manager</script>
				<command></command>
				<packageName></packageName>
				<regex>^display manager (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display layout name</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerSetTheme(matches[2], true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display layout (\w+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display side disable name</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerEnableSide(matches[2],false,true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display side disable (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display side enable name</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerEnableSide(matches[2],true,true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display side enable (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display side list</name>
				<script>--echo("captured: "..matches[2]..".\n")
UIManagerEnableSide("list",true,true)
UIManagerEnableSide("list",false,true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^display side list$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>display help</name>
				<script>UIManagerHelp() --help for client display</script>
				<command></command>
				<packageName></packageName>
				<regex>^display help$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>parthia</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>parthia load</name>
				<script>--Load settings from file.

--True echos to the user if it was successfull
tecFileLoadSettings(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia load$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia save all</name>
				<script>--save display and client settings.
tecClientSaveAll(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia save all$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia save</name>
				<script>--save client settings
--not display settings.
tecFileSaveSettings(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia save$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia</name>
				<script>--display tecClientHelp to screen
tecClientHelp()</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia reset</name>
				<script>--reloads user profile. Can't complete this right now.
--resetProfile()

--reset tec client settings to default. Not display though.
tecClientReset(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia reset$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia reset all</name>
				<script>tecClientResetAll(true) --resets all client settings</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia reset all$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia font size #</name>
				<script>tecClientSetFontSize(tonumber(matches[2])) 
--matches[2] is the word in () in the pattern</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia font size (.*)</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia tab font size #</name>
				<script>tecClientSetTabFontSize(tonumber(matches[2]))
--matches[2] is the word in () in the pattern</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia tab font size (.*)$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>parthia update</name>
				<script>DownloadGitScripts() --Begin downloading updates</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia update$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia repair</name>
				<script>--force an update installation. Intended for repair installation.
if not tecGitUpdate then --if the update engine has not been configured.
  GitUpdateconfig() --create default update engine config
end
GitUpdate.repairInstall = true --tell update engine a repair install is needed
GitUpdate.installationInProgress = false --notifies update engine if update is running.
DownloadGitReleaseJSON() --start the update process</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia repair$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia update check</name>
				<script>DownloadGitReleaseJSON() --check if an update is needed.</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia update check$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia beta test yes</name>
				<script>tecSetBetaTester(true) --inform Parthia player is a beta tester.</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia beta test yes$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia beta test no</name>
				<script>tecSetBetaTester(false) --inform Parthia player is a beta tester.</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia beta test no$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>colors</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>parthia colors</name>
					<script>tecColorWindow() --Open floating window to choose colors with.</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia colors$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia change colors</name>
					<script>tecClientChangeColors() --Help user change color scheams.</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia change colors$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia change colors commands</name>
					<script>tecClientChangeColorsList() --List commands to change display colors.</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia change colors commands$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia windows background color</name>
					<script>tecLabelBackgroundColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia windows background color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia tabs background color</name>
					<script>tecTabsBackgroundColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia tabs background color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia hover color</name>
					<script>tecSetMouseHoverColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia hover color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia greentext color</name>
					<script>tecSetGreenTextColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia greentext color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia bluetext color</name>
					<script>tecSetBlueTextColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia bluetext color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia gray color</name>
					<script>tecSetGrayTextColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia gray color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia purple color</name>
					<script>tecSetPurpleTextColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia purple color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia text color</name>
					<script>tecSetTextColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia text color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia helphighlight color</name>
					<script>tecSetHelpHighlightColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia helphighlight color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia approached character color</name>
					<script>tecSettecApproachedCharacter(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia approached character color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia not approached character color</name>
					<script>tecSettecNotApproachedCharacter(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia not approached character color (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia background color</name>
					<script>tecSetBackgroundColor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia background (.*)</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="yes" isFolder="no">
				<name>parthia report</name>
				<script>tecReportIssues()</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia report$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia version</name>
				<script>--if the update engine has not been initialized do it, to make the version number.
if not GitUpdate then GitUpdateconfig() end
cecho("Parthia version: "..GitUpdate.localVersion.."\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia version$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia playerdevelopment install</name>
				<script>--Installed modules set aside for player development.
--populate them with meaningfull triggers.
PlayerDev.SetEnabled(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia playerdevelopment install$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia playerdevelopment disable</name>
				<script>--Tell Parthia to no longer receive player development updates.
PlayerDev.SetEnabled(false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia playerdevelopment disable$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia playerdevelopment update</name>
				<script>PlayerDev.Update(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia playerdevelopment update$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia playerdevelopment uninstall</name>
				<script>--Tell Parthia to no longer receive player development updates.
PlayerDev.SetPackages(false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia playerdevelopment uninstall$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia commands</name>
				<script>parthiaCommandsHelp()</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia commands$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia numpad navigation</name>
				<script>if getNumpadNaviation() then --numpad is enabled so disable it
  setNumpadNavigation(false) --tell parthia to disable num navigation
  cecho("Number pad navigation disabled.\n")
 else --numpad navigation is disabled, so enable it
  setNumpadNavigation(true) --tell parthia to enable numpad navigation
  cecho("Number pad navigation enabled.\n")
end --if getNumpadNaviation() then

dontForgetToSave() --remind the player to save their changes.</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia numpad navigation$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>parthia prepare release</name>
				<script>setNumpadNavigation(true) --tell parthia to enable numpad navigation
cecho("Number pad navigation enabled.\n")

disableAlias("parthia update") --make certain update command is disabled
pecho("Update command disabled.\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia prepare release$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>parthia talk</name>
				<script>--Reference https://wiki.mudlet.org/w/Manual:Text_to_Speech_Functions

parthiaTalkHelp() --display parthia talk help</script>
				<command></command>
				<packageName></packageName>
				<regex>^parthia talk$</regex>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk enable</name>
					<script>setParthiaTalk(true) --enable parthia talk
parthiaEcho("parthia talk enabled.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk enable$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk disable</name>
					<script>setParthiaTalk(false) --enable parthia talk
expandAlias("parthia talk clear") --stop parthia talk's current speech.
parthiaEcho("parthia talk disabled.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk disable$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk clear</name>
					<script>ttsClearQueue() --clear out the message queue
ttsSkip() --skip the current message so it stops reading</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk clear$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk cl</name>
					<script>expandAlias("parthia talk clear")</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk cl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk skip</name>
					<script>ttsSkip() --skip the current message</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk skip$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk sk</name>
					<script>expandAlias("parthia talk skip")</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk sk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pt *</name>
					<script>--create shorter version of parthia talk command
expandAlias("parthia talk "..tostring(matches[2]))
</script>
					<command></command>
					<packageName></packageName>
					<regex>^pt (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pt</name>
					<script>expandAlias("parthia talk")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk test</name>
					<script>ttsSpeak("Parthia talk test.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk test$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk voice</name>
					<script>parthiaTalkSetVoice(matches[2], true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk voice (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk resume</name>
					<script>ttsResume() --resume talking through tts queue
ttsSpeak(" ") --sometimes the queue stops this will unstop it</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk resume$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk pause</name>
					<script>ttsPause() --pause speech</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk pause$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk speed</name>
					<script>--set speed parthia talk speeks at, and display messages to screen
parthiaTalkSetSpeed(matches[2], true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk speed (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk show</name>
					<script>display(ttsGetQueue())
ttsSpeak(" ") --sometimes GetQueue stop the queue, this prevents that.</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk show$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk thoughts</name>
					<script>--Toggle state of parthia talk thoughts, and display a message to screen
parthiaTalkSetThoughts(true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk thoughts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk speech</name>
					<script>--Toggle state of parthia talk speech, and display a message to screen
parthiaTalkSetSpeech(true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk speech$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk pitch</name>
					<script>--Set pitch of the voice parthia talk uses, displaying messages to screen
parthiaTalkSetPitch(matches[2], true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk pitch (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>parthia talk debug</name>
					<script>local message = ttsGetCurrentLine() --collect the current message in queue
local state = ttsGetState()
if message then --if there was a message in the tts queue
  message = "parthia talk current line: "..message.."&lt;reset&gt;parthia talk state: "..state
  debugToDisplay(message)
  cecho(message.."\n") --get the current message in the ttsQueue
  ttsSkip() --skip the current message
  cecho("Debug data above, restarting parthia talk queue.\n")
  ttsSpeak("Debug data above, restarting parthia talk queue.")
else --there is no message in the tts queue
  message = "No message in the parthia talk queue."
  message = message .. " parthia talk state "..state
  debugToDisplay(message)
  cecho(message.."\n")
  ttsSpeak(message)
end --if message</script>
					<command></command>
					<packageName></packageName>
					<regex>^parthia talk debug$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Debug</name>
			<script>tecDebugHelp() --display help window.</script>
			<command></command>
			<packageName></packageName>
			<regex>^debug$</regex>
			<Alias isActive="yes" isFolder="no">
				<name>debug on</name>
				<script>--function in scripts - variables.
setTECDebugMode(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug on</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug off</name>
				<script>--function in scripts - variables.
setTECDebugMode(false)

--Turn off debug display also
setTECDisplayDebugMode(false)

--turn off map debug mode
setTECMapDebugMode(false)

--turn off timer debug mesages
setTECTimerDebugMode(false)

pecho("\nAll debug modes off.\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug off</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug video on</name>
				<script>--Enable debug output for display
setTECDisplayDebugMode(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug display on</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug video off</name>
				<script>--Disable output of video debug display
setTECDisplayDebugMode(false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug display off</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug map on</name>
				<script>--Enable debug output for tec map
setTECMapDebugMode(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug map on</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug map off</name>
				<script>--Disable output of video debug display
setTECMapDebugMode(false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug map off</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug timers on</name>
				<script>--output timers to debug window
setTECTimerDebugMode(true)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug timers on</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug timers off</name>
				<script>--stop outputing timers to debug window
setTECTimerDebugMode(false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug timers off</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug test colors</name>
				<script>--Run a color test, function in scripts, techfunctions, debug
tecColorTest()</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug test colors$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>debug report issue</name>
				<script>tecReportIssues() --help user report issues.</script>
				<command></command>
				<packageName></packageName>
				<regex>^debug report issue$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>atuo checks</name>
			<script>--[[
Commands that interact with auto checks the client does.
Mostly these will be used to manually run a check for dev testing.
]]--</script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Room Check</name>
				<script>--Check room for characters and fill the room character window.
runTECRoomObjectCheck()</script>
				<command></command>
				<packageName></packageName>
				<regex>^room check$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>ac .</name>
				<script>runTECRoomObjectCheck(true) --check room for characters display all to screen</script>
				<command></command>
				<packageName></packageName>
				<regex>^ac \.$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>room refresh</name>
				<script>--checks if a refresh notification is already in window displays it if needed
tecRoomCharRefreshNotification()</script>
				<command></command>
				<packageName></packageName>
				<regex>^room refresh$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>login</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Username:</name>
				<script>-- This alias gets 'triggered' from triggers - login - secret trigger 
tecUsername = matches[2] --the first item
pecho("\nPlease enter your password.\n")
clearCmdLine() --clear the text user entered from command line
tecPasswordEntry = true --used to prevent the password entry from beind sent to servers.</script>
				<command></command>
				<packageName></packageName>
				<regex>^Username: (.+)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>font</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>font Size</name>
				<script>tecClientSetFontSize(tonumber(matches[2])) 
--matches[2] is the word in () in the pattern</script>
				<command></command>
				<packageName></packageName>
				<regex>^font (\d+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>font tab #</name>
				<script>tecClientSetTabFontSize(tonumber(matches[2]))
--matches[2] is the word in () in the pattern</script>
				<command></command>
				<packageName></packageName>
				<regex>^font tab (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>font</name>
				<script>pecho([[
The font command is used to change font settings.
Currently you can change the size of the font.
Uses are:
font size, changes the size of the font to the size entered.
IE: font 12, sets the font size to 12.
Current font size: ]]..getTECFont()
.."\nfont tab #, changes the size of window tabs.\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^font$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>commands</name>
			<script>--[[
commands ground is intended for commands that interact with the game.
Not commands that interact with the client.
Example would be `wait for drover`
]]--</script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>wait for drover</name>
				<script>if not parthiaGetWaitForDrover() then --if the player is not already waiting for the drover
  parthiaSetWaitForDrover(true) --wait for the drover. Uses trigger `Drover Arrives`
  pecho("You patiently wait for the drover to arrive.\n")
else --player is already waiting for drover
  pecho("You are already waiting for the drover.\n")
end --if not parthiaGetWaitForDrover()</script>
				<command></command>
				<packageName></packageName>
				<regex>^wait for drover$</regex>
			</Alias>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage />
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
